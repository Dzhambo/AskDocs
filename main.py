import logging
import os
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from config import *
from bot.voice_handler import VoiceHandler
from bot.ask_docs_bot import AskDocsBot
from bot.history_manager import HistoryManager
from bot.database import Database
from model.llm import LLM
from config import LOCAL_LLM_CONFIG
import asyncio
from pathlib import Path
import PyPDF2

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
llm = None

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
ask_docs_bot = AskDocsBot()
voice_handler = VoiceHandler()
history_manager = HistoryManager()
database = Database()
llm = LLM()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LLM

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–Ω–∏–≥, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
books_dir = Path("books")
books_dir.mkdir(exist_ok=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–Ω–∏–≥–∞–º–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.\n\n"
        "üìö –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
        "1. üìù –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º –∫–Ω–∏–≥–∞–º\n"
        "2. üé§ –ü—Ä–∏–Ω–∏–º–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã (–∫–æ–º–∞–Ω–¥–∞ /voice)\n"
        "3. üìú –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –Ω–∞—à–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤ (–∫–æ–º–∞–Ω–¥–∞ /history)\n"
        "4. ‚ùì –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –∫–æ–º–∞–Ω–¥–∞—Ö (–∫–æ–º–∞–Ω–¥–∞ /help)\n"
        "5. üì§ –ó–∞–≥—Ä—É–∂–∞—Ç—å –Ω–æ–≤—ã–µ –∫–Ω–∏–≥–∏ (–∫–æ–º–∞–Ω–¥–∞ /upload)\n"
        "6. üóë –£–¥–∞–ª—è—Ç—å –∫–Ω–∏–≥–∏ (–∫–æ–º–∞–Ω–¥–∞ /delete <id>)\n"
        "7. üìñ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ (–∫–æ–º–∞–Ω–¥–∞ /books)\n"
        "8. üîÑ –ò–∑–º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏ (–∫–æ–º–∞–Ω–¥–∞ /model <size>)\n\n"
        "üí° –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å, –∏ —è –Ω–∞–π–¥—É –æ—Ç–≤–µ—Ç –≤ –≤–∞—à–∏—Ö –∫–Ω–∏–≥–∞—Ö!"
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "üìö *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n"
        "üéØ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "‚ùì /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "üé§ /voice - –í–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å –≥–æ–ª–æ—Å–æ–º\n"
        "üìú /history - –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤\n"
        "üì§ /upload - –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—É—é –∫–Ω–∏–≥—É\n"
        "üóë /delete <id> - –£–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É –ø–æ ID\n"
        "üìñ /books - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥\n"
        "üîÑ /model <size> - –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏\n\n"
        "üí° –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, "
        "–∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤."
    )
    await update.message.reply_text(help_text, parse_mode='Markdown')

async def upload_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /upload"""
    await update.message.reply_text(
        "üì§ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF –∏–ª–∏ TXT.\n\n"
        "üí° –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:\n"
        "‚Ä¢ PDF —Ñ–∞–π–ª—ã\n"
        "‚Ä¢ –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã (TXT)"
    )
    context.user_data['waiting_for_file'] = True

async def books_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥"""
    books = database.get_all_documents()
    if not books:
        await update.message.reply_text("üìö –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /upload –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–π –∫–Ω–∏–≥–∏.")
        return
    
    books_list = "üìö –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏:\n\n"
    for book in books:
        books_list += f"üìñ ID: {book[0]}\n"
        books_list += f"üìë –ù–∞–∑–≤–∞–Ω–∏–µ: {book[2] or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n"
        books_list += f"üìÑ –¢–∏–ø: {book[3] or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        books_list += f"üïí –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {book[4]}\n"
        books_list += "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
    
    books_list += "\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /delete <id> –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏"
    await update.message.reply_text(books_list)

async def delete_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –ø–æ ID"""
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∫–Ω–∏–≥–∏: /delete <id>")
        return
        
    try:
        book_id = int(context.args[0])
        if database.delete_document(book_id):
            await update.message.reply_text(f"‚úÖ –ö–Ω–∏–≥–∞ —Å ID {book_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.")
        else:
            await update.message.reply_text(f"‚ùå –ö–Ω–∏–≥–∞ —Å ID {book_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    except ValueError:
        await update.message.reply_text("‚ùå ID –∫–Ω–∏–≥–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")

async def handle_file(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    if not context.user_data.get('waiting_for_file'):
        return
        
    file = await update.message.document.get_file()
    file_name = update.message.document.file_name
    
    if not (file_name.endswith('.pdf') or file_name.endswith('.txt')):
        await update.message.reply_text("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF –∏–ª–∏ TXT.")
        context.user_data['waiting_for_file'] = False
        return
        
    file_path = books_dir / file_name
    await file.download_to_drive(file_path)
    
    try:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞
        if file_name.endswith('.pdf'):
            text = extract_text_from_pdf(file_path)
            file_type = 'pdf'
        else:
            text = file_path.read_text(encoding='utf-8')
            file_type = 'txt'
            
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        title = file_name.rsplit('.', 1)[0]  # –ò–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        database.add_document(
            text=text,
            title=title,
            file_type=file_type
        )
        
        await update.message.reply_text(f"‚úÖ –ö–Ω–∏–≥–∞ '{title}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
        
        # –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞
        ask_docs_bot.initialize_index()
        
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")
    finally:
        context.user_data['waiting_for_file'] = False

def extract_text_from_pdf(file_path):
    """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ PDF —Ñ–∞–π–ª–∞"""
    text = ""
    with open(file_path, 'rb') as file:
        pdf_reader = PyPDF2.PdfReader(file)
        for page in pdf_reader.pages:
            text += page.extract_text() + "\n"
    return text

async def history_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /history"""
    user_id = update.effective_user.id
    messages = history_manager.get_user_history(user_id)
    history_text = history_manager.format_history(messages)
    await update.message.reply_text(history_text)

async def voice_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /voice"""
    await update.message.reply_text(
        "üé§ –ì–æ–≤–æ—Ä–∏—Ç–µ...\n\n"
        "‚è≥ –ó–∞–ø–∏—Å—å –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã\n"
        "üí° –ì–æ–≤–æ—Ä–∏—Ç–µ —á–µ—Ç–∫–æ –∏ –Ω–µ —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ"
    )
    
    # –î–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Ä–µ–º—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è
    await asyncio.sleep(3)
    
    try:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
        text = voice_handler.process_voice_command(duration=10)
        
        if text:
            user_id = update.effective_user.id
            history_manager.add_message(user_id, text)
            
            await update.message.reply_text(f"üéØ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n{text}")
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            response = await ask_docs_bot.process_query(text)
            history_manager.add_message(user_id, response, is_bot=True)
            await update.message.reply_text(response)
        else:
            await update.message.reply_text(
                "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.\n\n"
                "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
                "‚Ä¢ –ì–æ–≤–æ—Ä–∏—Ç—å —á–µ—Ç—á–µ\n"
                "‚Ä¢ –£–º–µ–Ω—å—à–∏—Ç—å —Ñ–æ–Ω–æ–≤—ã–π —à—É–º\n"
                "‚Ä¢ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑"
            )
    except Exception as e:
        await update.message.reply_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã: {str(e)}")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.effective_user.id
    message_text = update.message.text
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    history_manager.add_message(user_id, message_text)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_message = await update.message.reply_text("üîç –ò—â—É –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å...")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
    response = await ask_docs_bot.process_query(message_text)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
    history_manager.add_message(user_id, response, is_bot=True)
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
    await processing_message.delete()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await update.message.reply_text(response)

async def model_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle /model command to change model size"""
    global llm  # –¢–µ–ø–µ—Ä—å —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    
    if not context.args:
        # Show current model info
        model_info = llm.get_model_info()
        message = f"Current model:\n"
        message += f"Type: {model_info['type']}\n"
        message += f"Model: {model_info['model']}\n"
        if model_info['type'] == 'local':
            message += f"Size: {model_info['size']}\n"
        message += f"Description: {model_info['description']}\n\n"
        message += "Available sizes for local model:\n"
        for size, config in LOCAL_LLM_CONFIG.items():
            message += f"- {size}: {config['description']}\n"
        message += "\nTo change model size, use: /model <size>"
        await update.message.reply_text(message)
        return

    size = context.args[0].lower()
    if size not in LOCAL_LLM_CONFIG:
        await update.message.reply_text(
            f"Invalid model size. Available sizes: {', '.join(LOCAL_LLM_CONFIG.keys())}"
        )
        return

    llm = LLM(model_size=size)
    await update.message.reply_text(f"Model changed to {size} size!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(token).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("voice", voice_command))
    application.add_handler(CommandHandler("history", history_command))
    application.add_handler(CommandHandler("upload", upload_command))
    application.add_handler(CommandHandler("delete", delete_command))
    application.add_handler(CommandHandler("books", books_command))
    application.add_handler(CommandHandler("model", model_command))
    application.add_handler(MessageHandler(filters.Document.ALL, handle_file))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling(drop_pending_updates=True)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω...")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        raise
